pipeline {
    agent {
        docker {
            image 'maven:3.8.6-openjdk-18-slim'
            args '-v /root/.m2:/root/.m2'
        }
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
    }
    post {
        always {
            echo '====== Clean up workspace ======'
            deleteDir() /* clean up our workspace */
            echo '====== Workspace has been cleaned ======'
        }

        success {
            echo '====== Pipeline ran successfully ======'
            mail to: 'paris.huang@west.com',
                subject: "Successfully run Jenkins Pipeline: ${currentBuild.fullDisplayName}",
                body: "Build URL: ${env.BUILD_URL}"            
        }

        failure {
            echo '====== Pipeline failed ======'

            mail to: 'paris.huang@west.com',
                subject: "Failed Jenkins Pipeline: ${currentBuild.fullDisplayName}",
                body: "Something went wrong with ${env.BUILD_URL}, please check the Console Output for more details."
        }
    }    
}
